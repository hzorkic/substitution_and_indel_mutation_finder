facet_wrap(vars(survived, class))
ggplot(titanic, aes(age, fill = after_stat(count))) +
geom_histogram(binwidth = 5, center = 2.5) +
facet_wrap(vars(survived, class))
ggplot(titanic, aes(age, color = after_stat(density))) +
geom_point(stat = "density") +
facet_wrap(vars(survived, class))
ggplot(lincoln_temps, aes(x = month, y = mean_temp)) +
geom_boxplot()
ggplot(lincoln_temps, aes(x = month, y = mean_temp)) +
geom_violin(trim=FALSE, fill="red")
ggplot(lincoln_temps, aes(x = month, y = mean_temp)) +
geom_violin(bw = .5)
ggplot(lincoln_temps, aes(x = month, y = mean_temp)) +
geom_violin(kernel="rectangular", bw=.5)
ggplot(lincoln_temps, aes(x = month, y = mean_temp)) +
geom_point(size = 0.75)
ggplot(lincoln_temps, aes(x = month, y = mean_temp)) +
geom_point(
size = 0.75,
position = position_jitter(width = 0.15, height = 0)
)
ggplot(lincoln_temps, aes(x = month, y = mean_temp)) +
geom_point(
size = 0.75,
position = position_jitter(width = 0.15, height = 0, seed = 1234)
)
ggplot(lincoln_temps, aes(x = month, y = mean_temp)) +
geom_sina(size = 0.75)
ggplot(lincoln_temps, aes(x = month, y = mean_temp)) +
geom_violin() +
geom_sina(size = 0.75)
ggplot(lincoln_temps, aes(x = month, y = mean_temp)) +
geom_violin(color = NA, fill = "cornsilk") +  # `NA` means no color
geom_sina(size = 0.75)
ggplot(lincoln_temps, aes(x = mean_temp, y = month_long)) +
geom_density_ridges()
ggplot(lincoln_temps, aes(x = mean_temp, y = month_long)) +
geom_density_ridges(rel_min_height = 0.01)
ggplot(lincoln_temps, aes(x = month, y = mean_temp)) +
geom_violin(color = NA, fill = "light blue") +  # `NA` means no color
geom_sina(size = 0.75)
library(tidyverse)
library(lubridate)
library(palmerpenguins)
library(ggforce)
library(ggridges)
# data prep
temperatures <- read_csv("https://wilkelab.org/SDS375/datasets/tempnormals.csv") %>%
mutate(
location = factor(
location, levels = c("Death Valley", "Houston", "San Diego", "Chicago")
)
) %>%
select(location, day_of_year, month, temperature)
temps_houston <- filter(temperatures, location == "Houston")
# Data from Box Office Mojo for Dec. 22-24, 2017.
boxoffice <- tibble(
rank = 1:5,
title = c("Star Wars", "Jumanji", "Pitch Perfect 3", "Greatest Showman", "Ferdinand"),
amount = c(71.57, 36.17, 19.93, 8.81, 7.32) # million USD
)
penguins_nomissing <- na.omit(penguins) # remove all rows with any missing values
titanic <- read_csv("https://wilkelab.org/SDS375/datasets/titanic.csv") %>%
select(age, sex, class, survived) %>%
arrange(age, sex, class)
lincoln_temps <- readRDS(url("https://wilkelab.org/SDS375/datasets/lincoln_temps.rds"))
ggplot(temps_houston, aes(x = day_of_year, y = temperature)) +
geom_line()
ggplot(temps_houston, aes(x = day_of_year, y = temperature)) +
geom_point()
ggplot(temps_houston, aes(x = temperature, y = day_of_year)) +
geom_point()
ggplot(temps_houston, aes(x = month, y = temperature)) +
geom_boxplot()
ggplot(temps_houston, aes(x = temperature, y = month)) +
geom_boxplot()
ggplot(temperatures, aes(x = day_of_year, y = temperature, color = location)) +
geom_line()
ggplot(temperatures, aes(x = day_of_year, y = location, color = temperature)) +
geom_point()
ggplot(temperatures, aes(x = month, y = temperature, fill = location)) +
geom_boxplot()
ggplot(temperatures, aes(x = month, y = temperature, color = location, fill = month)) +
geom_boxplot()
ggplot(temperatures, aes(x = month, y = temperature, fill = location)) +
geom_boxplot(color = "navyblue")
ggplot(temperatures, aes(x = month, y = temperature, color = location)) +
geom_boxplot(fill = "navyblue")
ggplot(boxoffice, aes(x = title, y = amount)) +
geom_col()
ggplot(boxoffice, aes(x = amount, y = title)) +
geom_col()
ggplot(boxoffice, aes(x = amount, y = title)) +
geom_col() +
xlab("weekend gross (million USD)") +
ylab(NULL) # NULL means nothing, don't show a y label
ggplot(boxoffice, aes(x = amount, y = fct_reorder(title, amount))) +
geom_col() +
xlab("weekend gross (million USD)") +
ylab(NULL)
ggplot(penguins_nomissing, aes(x = species)) +
geom_bar()
ggplot(penguins_nomissing, aes(x = species, fill = sex)) +
geom_bar()
ggplot(penguins_nomissing, aes(x = species, fill = sex)) +
geom_bar(position = "dodge")
ggplot(penguins_nomissing, aes(x = species, fill = sex)) +
geom_bar(position = "stack")
ggplot(penguins_nomissing, aes(x = species, fill = sex)) +
geom_bar(position = "fill")
ggplot(titanic, aes(age)) +
geom_histogram()
ggplot(titanic, aes(age)) +
geom_histogram(binwidth = 5, center = 2.5)
ggplot(titanic, aes(age)) +
geom_density(fill = "light blue")
ggplot(titanic, aes(age)) +
geom_density(fill = "light blue", bw = 1, kernel = "triangular")
ggplot(titanic, aes(age)) +
geom_histogram(binwidth = 5, center = 2.5) +
facet_wrap(vars(class))
ggplot(titanic, aes(age)) +
geom_histogram(binwidth = 5, center = 2.5) +
facet_wrap(vars(survived))
ggplot(titanic, aes(age)) +
geom_histogram(binwidth = 5, center = 2.5) +
facet_wrap(vars(survived, class))
ggplot(titanic, aes(age)) +
geom_density(fill = "light blue", bw = 2) +
facet_wrap(vars(survived, class))
# use the default y mapping
ggplot(titanic, aes(age, y = after_stat(density))) +
geom_density(fill = "light blue", bw = 2) +
facet_wrap(vars(survived, class))
# use a modified y mapping
ggplot(titanic, aes(age, y = after_stat(count))) +
geom_density(fill = "light blue", bw = 2) +
facet_wrap(vars(survived, class))
ggplot(titanic, aes(age, y = after_stat(density))) +
geom_histogram(binwidth = 5, center = 2.5) +
facet_wrap(vars(survived, class))
ggplot(titanic, aes(age, fill = after_stat(count))) +
geom_histogram(binwidth = 5, center = 2.5) +
facet_wrap(vars(survived, class))
ggplot(titanic, aes(age, color = after_stat(density))) +
geom_point(stat = "density") +
facet_wrap(vars(survived, class))
ggplot(lincoln_temps, aes(x = month, y = mean_temp)) +
geom_boxplot()
ggplot(lincoln_temps, aes(x = month, y = mean_temp)) +
geom_violin(trim=FALSE, fill="red")
ggplot(lincoln_temps, aes(x = month, y = mean_temp)) +
geom_violin(bw = .5)
ggplot(lincoln_temps, aes(x = month, y = mean_temp)) +
geom_violin(kernel="rectangular", bw=.5)
ggplot(lincoln_temps, aes(x = month, y = mean_temp)) +
geom_point(size = 0.75)
ggplot(lincoln_temps, aes(x = month, y = mean_temp)) +
geom_point(
size = 0.75,
position = position_jitter(width = 0.15, height = 0)
)
ggplot(lincoln_temps, aes(x = month, y = mean_temp)) +
geom_point(
size = 0.75,
position = position_jitter(width = 0.15, height = 0, seed = 1234)
)
ggplot(lincoln_temps, aes(x = month, y = mean_temp)) +
geom_sina(size = 0.75)
ggplot(lincoln_temps, aes(x = month, y = mean_temp)) +
geom_violin() +
geom_sina(size = 0.75)
ggplot(lincoln_temps, aes(x = month, y = mean_temp)) +
geom_violin(color = NA, fill = "light blue") +  # `NA` means no color
geom_sina(size = 0.75)
ggplot(lincoln_temps, aes(x = mean_temp, y = month_long)) +
geom_density_ridges()
ggplot(lincoln_temps, aes(x = mean_temp, y = month_long)) +
geom_density_ridges(rel_min_height = 0.01)
library(knitr)
library(ggplot2)
library(ggridges)
opts_chunk$set(fig.align="center", fig.height=4, fig.width=5.5)
ggplot(lincoln_temps, aes(x = month, y = mean_temp)) +
geom_point(
size = 0.75
)
ggplot(lincoln_temps, aes(x = month, y = mean_temp)) +
geom_point(
size = 0.75,
position = position_jitter(width = 0.15, height = 0, seed = 1234)
)
ggplot(iris, aes(x =Sepal.Length, y = Species)) +
geom_point(
size = 0.75
)
ggplot(iris, aes(x =Sepal.Length, y = Species)) +
geom_point(
size = 0.75,
position = position_jitter(width = 0.15, height = 0, seed = 1234)
)
ggplot(iris, aes(x =Sepal.Length, y = Species)) +
geom_point(
size = 0.75
)
ggplot(iris, aes(x =Sepal.Length, y = Species)) +
geom_point(
size = 0.75,
position = position_jitter(width = 1, height = 0, seed = 1234)
)
ggplot(iris, aes(x =Sepal.Length, y = Species)) +
geom_point(
size = 2
)
ggplot(iris, aes(x =Sepal.Length, y = Species)) +
geom_point(
size = 2,
position = position_jitter(width = 0.15, height = 0, seed = 1234)
)
ggplot(iris, aes(x =Sepal.Length, y = Species)) +
geom_point(
size = 1
)
ggplot(iris, aes(x =Sepal.Length, y = Species)) +
geom_point(
size = 1,
position = position_jitter(width = 0.15, height = 0, seed = 1234)
)
head(Aus_athletes)
ggplot(Aus_athletes, aes(x = height, y = sport, color = sex)) +
geom_density_ridges()
ggplot(Aus_athletes, aes(x = height, y = sport, fill= sex)) +
geom_density_ridges()
library(learnr)
library(tidyverse)
knitr::opts_chunk$set(echo = FALSE, comment = "")
# data prep
boxoffice <- tibble(
rank = 1:5,
title = c("Star Wars", "Jumanji", "Pitch Perfect 3", "Greatest Showman", "Ferdinand"),
amount = c(71.57, 36.17, 19.93, 8.81, 7.32) # million USD
)
temperatures <- read_csv("https://wilkelab.org/SDS375/datasets/tempnormals.csv") %>%
mutate(
location = factor(
location, levels = c("Death Valley", "Houston", "San Diego", "Chicago")
)
) %>%
select(location, day_of_year, month, temperature)
US_census <- read_csv("https://wilkelab.org/SDS375/datasets/US_census.csv")
tx_counties <- US_census %>%
filter(state == "Texas") %>%
select(name, pop2010) %>%
extract(name, "county", regex = "(.+) County") %>%
mutate(popratio = pop2010/median(pop2010)) %>%
arrange(desc(popratio)) %>%
mutate(index = 1:n())
library(learnr)
library(tidyverse)
knitr::opts_chunk$set(echo = FALSE, comment = "")
# data prep
boxoffice <- tibble(
rank = 1:5,
title = c("Star Wars", "Jumanji", "Pitch Perfect 3", "Greatest Showman", "Ferdinand"),
amount = c(71.57, 36.17, 19.93, 8.81, 7.32) # million USD
)
temperatures <- read_csv("https://wilkelab.org/SDS375/datasets/tempnormals.csv") %>%
mutate(
location = factor(
location, levels = c("Death Valley", "Houston", "San Diego", "Chicago")
)
) %>%
select(location, day_of_year, month, temperature)
US_census <- read_csv("https://wilkelab.org/SDS375/datasets/US_census.csv")
tx_counties <- US_census %>%
filter(state == "Texas") %>%
select(name, pop2010) %>%
extract(name, "county", regex = "(.+) County") %>%
mutate(popratio = pop2010/median(pop2010)) %>%
arrange(desc(popratio)) %>%
mutate(index = 1:n())
# load required library
library(tidyverse)
ggplot(boxoffice) +
aes(amount, fct_reorder(title, amount)) +
geom_col()
ggplot(boxoffice) +
aes(amount, fct_reorder(title, amount)) +
geom_col() +
scale_x____() +
scale_y____()
ggplot(boxoffice) +
aes(amount, fct_reorder(title, amount)) +
geom_col() +
scale_x_continuous(name = "weekend gross (million USD)") +
scale_y_discrete(name = NULL)
ggplot(boxoffice) +
aes(amount, fct_reorder(title, amount)) +
geom_col() +
scale_x_continuous(name = "weekend gross (million USD)") +
scale_y_discrete(name = NULL)
ggplot(boxoffice) +
aes(amount, fct_reorder(title, amount)) +
geom_col() +
scale_x_continuous(
name = "weekend gross (million USD)",
limits = c(0, 80)
) +
scale_y_discrete(name = NULL)
ggplot(boxoffice) +
aes(amount, fct_reorder(title, amount)) +
geom_col() +
scale_x_continuous(
name = "weekend gross",
limits = c(0, 80),
breaks = c(0, 25, 50, 75),
labels = c("0", "$25M", "$50M", "$75M")
) +
scale_y_discrete(name = NULL)
ggplot(boxoffice) +
aes(amount, fct_reorder(title, amount)) +
geom_col() +
scale_x_continuous(
name = "weekend gross",
limits = c(0, 80),
breaks = c(0, 25, 50, 75),
labels = c("0", "$25M", "$50M", "$75M"),
expand = expansion(mult = c(0, 0.06))
) +
scale_y_discrete(name = NULL)
ggplot(boxoffice) +
aes(amount, fct_reorder(title, amount)) +
geom_col() +
scale_x_continuous(
name = "weekend gross",
limits = c(0, 80),
breaks = c(0, 25, 50, 75),
labels = c("0", "$25M", "$50M", "$75M"),
expand = expansion(mult = c(0, 0))
) +
scale_y_discrete(name = NULL)
ggplot(boxoffice) +
aes(amount, fct_reorder(title, amount)) +
geom_col() +
scale_x_continuous(
name = "weekend gross",
limits = c(0, 80),
breaks = c(0, 25, 50, 75),
labels = c("0", "$25M", "$50M", "$75M"),
expand = expansion(mult = c(0, 0.6))
) +
scale_y_discrete(name = NULL)
ggplot(boxoffice) +
aes(amount, fct_reorder(title, amount)) +
geom_col() +
scale_x_continuous(
name = "weekend gross",
limits = c(0, 80),
breaks = c(0, 25, 50, 75),
labels = c("0", "$25M", "$50M", "$75M"),
expand = expansion(mult = c(2, 2))
) +
scale_y_discrete(name = NULL)
ggplot(boxoffice) +
aes(amount, fct_reorder(title, amount)) +
geom_col() +
scale_x_continuous(
name = "weekend gross",
limits = c(0, 80),
breaks = c(0, 25, 50, 75),
labels = c("0", "$25M", "$50M", "$75M"),
expand = expansion(mult = 0
) +
scale_y_discrete(name = NULL)
ggplot(boxoffice) +
aes(amount, fct_reorder(title, amount)) +
geom_col() +
scale_x_continuous(
name = "weekend gross",
limits = c(0, 80),
breaks = c(0, 25, 50, 75),
labels = c("0", "$25M", "$50M", "$75M"),
expand = expansion(mult = 0)
) +
scale_y_discrete(name = NULL)
ggplot(boxoffice) +
aes(amount, fct_reorder(title, amount)) +
geom_col() +
scale_x_continuous(
name = "weekend gross",
limits = c(0, 80),
breaks = c(0, 25, 50, 75),
labels = c("0", "$25M", "$50M", "$75M"),
expand = expansion(mult = c(0,0.6))
) +
scale_y_discrete(name = NULL)
ggplot(boxoffice) +
aes(amount, fct_reorder(title, amount)) +
geom_col() +
scale_x_continuous(
name = "weekend gross",
limits = c(0, 80),
breaks = c(0, 25, 50, 75),
labels = c("0", "$25M", "$50M", "$75M"),
expand = expansion(mult = c(0,0.06))
) +
scale_y_discrete(name = NULL)
ggplot(boxoffice) +
aes(amount, fct_reorder(title, amount)) +
geom_col() +
scale_x_continuous(
name = "weekend gross",
limits = c(0, 80),
breaks = c(0, 25, 50, 75),
labels = c("0", "$25M", "$50M", "$75M"),
expand = expansion(mult = c(0,0))
) +
scale_y_discrete(name = NULL)
ggplot(boxoffice) +
aes(amount, fct_reorder(title, amount)) +
geom_col() +
scale_x_continuous(
name = "weekend gross",
limits = c(0, 80),
breaks = c(0, 25, 50, 75),
labels = c("0", "$25M", "$50M", "$75M"),
expand = expansion(mult = c(0,10))
) +
scale_y_discrete(name = NULL)
ggplot(boxoffice) +
aes(amount, fct_reorder(title, amount)) +
geom_col() +
scale_x_continuous(
name = "weekend gross",
limits = c(0, 80),
breaks = c(0, 25, 50, 75),
labels = c("0", "$25M", "$50M", "$75M"),
expand = expansion(mult = c(0,0))
) +
scale_y_discrete(name = NULL)
ggplot(tx_counties) +
aes(x = index, y = popratio) +
geom_point() +
scale_y_log10()
ggplot(tx_counties) +
aes(x = index, y = popratio) +
geom_point() +
scale_y_log10(
name = "population number / median",
limits = c(0.003, 300),
breaks = c(0.01, 1, 100),
labels = c("0.01", "1", "100")
)
ggplot(Aus_athletes, aes(x = height, y = sport, fill= sex)) +
geom_density_ridges()
ggplot(Aus_athletes, aes(x = height, y = sport, fill= sex)) +
geom_density_ridges()
ggplot(Aus_athletes, aes(x = height, y = sport, fill= sex)) +
geom_boxplot()
ggplot(Aus_athletes, aes(x = height, y = sport, fill= sex, density(=0.5))) +
ggplot(Aus_athletes, aes(x = height, y = sport, fill= sex, alpha = 0.5)) +
geom_density_ridges()
ggplot(Aus_athletes, aes(x = height, y = sport, fill= sex)) +
geom_boxplot()
ggplot(Aus_athletes, aes(x = height, y = sport, fill= sex, alpha = 0.5)) +
geom_density_ridges()
ggplot(Aus_athletes, aes(x = height, y = sport, fill= sex, alpha = 0.5)) +
geom_boxplot()
ggplot(Aus_athletes, aes(x = height, y = sport, fill= sex)) +
geom_density_ridges(aes(alpha = 0.5))
ggplot(Aus_athletes, aes(x = height, y = sport, fill= sex, alpha = 0.5)) +
geom_boxplot()
ggplot(Aus_athletes, aes(x = height, y = sport, fill= sex)) +
geom_density_ridges(alpha = 0.5)
ggplot(Aus_athletes, aes(x = height, y = sport, fill= sex, alpha = 0.5)) +
geom_boxplot()
ggplot(Aus_athletes, aes(x = height, y = sport, fill= sex)) +
geom_density_ridges(alpha = 0.5)
ggplot(Aus_athletes, aes(x = height, y = sport, fill= sex) +
geom_boxplot(alpha=0.5)
ggplot(Aus_athletes, aes(x = height, y = sport, fill= sex)) +
geom_density_ridges(alpha = 0.5)
ggplot(Aus_athletes, aes(x = height, y = sport, fill= sex)) +
geom_boxplot(alpha=0.5)
install.packages("csv")
setwd("C:/Research/Spike/GISAID/substitution_and_indel_mutation_finder")
library(tidyverse)
library(csv)
GISAID <- read.csv("GISAID.csv")
head(GISAID)
nrow(GISAID)
GISAID %>% data.frame() %>% group_by("mutations") %>% summarize(count = count())
GISAID %>% data.frame() %>% group_by("mutations") %>% summarize(n = count())
GISAID %>% data.frame() %>% group_by("mutations") %>% summarize(count =n())
head(GISAID)
df = data.frame(GISAID) %>% count(df, vars=c("type", "mutation"))
df = data.frame(GISAID) %>% count(vars=c("type", "mutation"))
df = data.frame(GISAID)
count(vars=c("type", "mutation"))
count(df, vars=c("type", "mutation"))
rlang::last_error()
library(dplyr)
count(df, vars=c("type", "mutation"))
tail(GISAID)
View(GISAID)
View(GISAID)
aggregate(count ~ "type" + "mutations", data = df, sum)
aggregate(count ~ type + mutations, data = df, sum)
aggregate(count ~ mutations, data = df, sum)
count(df, c("type", "mutations"))
rlang::last_error()
